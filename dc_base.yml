version: "2.3"

services:

    zookeeper1:
        image: zookeeper:3.4.10
        container_name: zookeeper1
        hostname: zookeeper1
        restart: always
        ports:
            - 2181:2181
        environment:
            ZOO_MY_ID: 1
            ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
        volumes:
            - data_zk_1_data:/data
            - data_zk_1_datalog:/datalog

    zookeeper2:
        image: zookeeper:3.4.10
        container_name: zookeeper2
        hostname: zookeeper2
        restart: always
        ports:
            - 2182:2181
        environment:
            ZOO_MY_ID: 2
            ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
        volumes:
            - data_zk_2_data:/data
            - data_zk_2_datalog:/datalog

    zookeeper3:
        image: zookeeper:3.4.10
        container_name: zookeeper3
        hostname: zookeeper3
        restart: always
        ports:
            - 2183:2181
        environment:
            ZOO_MY_ID: 3
            ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
        volumes:
            - data_zk_3_data:/data
            - data_zk_3_datalog:/datalog

    kafka1:
        image: wurstmeister/kafka:2.12-2.2.1
        container_name: kafka1
        hostname: kafka1
        depends_on:
            - zookeeper1
            - zookeeper2
            - zookeeper3
        restart: always
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper1:2181,zookeeper2:2181,zookeeper3:2181'
            KAFKA_HEAP_OPTS: '-Xmx256M -Xms256M'
            DEFAULT_REPLICATION_FACTOR: 1
            MIN_INSYNC_REPLICAS: 1
            KAFKA_DELETE_TOPIC_ENABLE: "true"
            # KAFKA_LISTENERS: 'kafka1'
            # KAFKA_ADVERTISED_PORT: 9092
            KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
            KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        volumes:
            - log_kafka1:/infra/log/kafka/kafka1
            - data_kafka1:/infra/data/kafka/kafka1

    kafka2:
        image: wurstmeister/kafka:2.12-2.2.1
        container_name: kafka2
        hostname: kafka2
        depends_on:
            - zookeeper1
            - zookeeper2
            - zookeeper3
        restart: always
        environment:
            KAFKA_BROKER_ID: 2
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper1:2181,zookeeper2:2181,zookeeper3:2181'
            KAFKA_HEAP_OPTS: '-Xmx256M -Xms256M'
            DEFAULT_REPLICATION_FACTOR: 1
            MIN_INSYNC_REPLICAS: 1
            KAFKA_DELETE_TOPIC_ENABLE: "true"
            # KAFKA_LISTENERS: 'kafka1'
            # KAFKA_ADVERTISED_PORT: 9092
            KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
            KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        volumes:
            - log_kafka2:/infra/log/kafka/kafka2
            - data_kafka2:/infra/data/kafka/kafka2

    kafka3:
        image: wurstmeister/kafka:2.12-2.2.1
        container_name: kafka3
        hostname: kafka3
        depends_on:
            - zookeeper1
            - zookeeper2
            - zookeeper3
        restart: always
        environment:
            KAFKA_BROKER_ID: 3
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper1:2181,zookeeper2:2181,zookeeper3:2181'
            KAFKA_HEAP_OPTS: '-Xmx256M -Xms256M'
            DEFAULT_REPLICATION_FACTOR: 1
            MIN_INSYNC_REPLICAS: 1
            KAFKA_DELETE_TOPIC_ENABLE: "true"
            # KAFKA_LISTENERS: 'kafka1'
            # KAFKA_ADVERTISED_PORT: 9092
            KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
            KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        volumes:
            - log_kafka3:/infra/log/kafka/kafka3
            - data_kafka3:/infra/data/kafka/kafka3

    httpsink:
        image: debian:jessie-slim
        container_name: httpsink
        restart: always
        hostname: httpsink
        ports:
            - 12345:12345
        environment:
            PORT: 12345
        volumes:
            - ./infra/httpsink/httpsink:/httpsink
        entrypoint: /httpsink

volumes:
    data_zk_1_data:
    data_zk_1_datalog:
    data_zk_2_data:
    data_zk_2_datalog:
    data_zk_3_data:
    data_zk_3_datalog:
    data_kafka1:
    log_kafka1:
    data_kafka2:
    log_kafka2:
    data_kafka3:
    log_kafka3:
